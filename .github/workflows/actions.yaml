name: Build and Push Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Read INITIAL_VERSION from version.txt
        run: |
          export INITIAL_VERSION=$(cat ../version.txt)
          echo "INITIAL_VERSION=$INITIAL_VERSION" >> $GITHUB_ENV
              
      - name: Extract numeric version
        id: extract-numeric-version
        run: |
          IFS='.' read -r -a VERSION_PARTS <<< "$INITIAL_VERSION"
          MAJOR=${VERSION_PARTS[0]}
          MINOR=${VERSION_PARTS[1]}
          PATCH=${VERSION_PARTS[2]}
          VERSION_NUMERIC=$((MAJOR * 10000 + MINOR * 100 + PATCH))
          echo "::set-output name=version_numeric::$VERSION_NUMERIC"

      - name: Bump version by 1
        id: bump-version
        run: |
          VERSION_NUMERIC=${{ steps.extract-numeric-version.outputs.version_numeric }}
          NEW_VERSION_NUMERIC=$((VERSION_NUMERIC + 1))
          NEW_MAJOR=$((NEW_VERSION_NUMERIC / 10000))
          NEW_MINOR=$(((NEW_VERSION_NUMERIC / 100) % 100))
          NEW_PATCH=$((NEW_VERSION_NUMERIC % 100))
          NEW_VERSION="$NEW_MAJOR.$NEW_MINOR.$NEW_PATCH"
          echo $NEW_VERSION > ../version.txt
          echo "::set-output name=new_version::$NEW_VERSION"

      # - name: Update image tag in kpack_images/image.yaml
      #   run: |
      #     NEW_VERSION=${{ steps.bump-version.outputs.new_version }}
      #     sed -i "s|tag:.*|tag: dshep15/builder:$NEW_VERSION|" kpack_images/image.yaml
      #     cat kpack_images/image.yaml  # Confirm changes

      - name: Build Docker image with kpack
        run: |
          NEW_VERSION=${{ steps.bump-version.outputs.new_version }}
          kp image create tomcat-demo-${NEW_VERSION} \
            --namespace default \
            --service-account registry-credentials-service-account \
            --builder my-builder \
            --tag dshep15/builder:${NEW_VERSION}  \
            --git https://github.com/DanielShepelev/tsassignment/ \
            --git-revision main

      # - name: Update the new version in values.yaml
      #   run: |
      #     NEW_VERSION=${{ steps.bump-version.outputs.new_version }}
      #     sed -i "s|tag:.*|tag: $NEW_VERSION|" helmfiles/values.yaml
      #     cat helmfiles/values.yaml  # Confirm changes

  
      - name: Update values.yaml
        run: |
          NEW_VERSION=${{ steps.bump-version.outputs.new_version }}
          sed -i 's/tag: ""/tag: "'"$NEW_VERSION"'"/' helmfiles/values.yaml
          cat helmfiles/values.yaml  # Verify changes

      - name: Update Helm Chart in chartmeseum
        run: |
          NEW_VERSION=${{ steps.bump-version.outputs.new_version }}
          sed -i "s/version: [0-9]\+\.[0-9]\+\.[0-9]\+/version: $NEW_VERSION/" helmfiles/Chart.yaml 
          cat helmfiles/Chart.yaml  # Confirm changes
          cd helmfiles
          helm package .
          ls
          file=(my-java-app-*)
          curl --data-binary "@$file" http://20.237.113.172:8081/api/charts
          rm my-java-app-*
